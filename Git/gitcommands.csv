comando, descripción, ejemplo
git init, inicializa el repositorio
git config --global user.name "[nombre usuario]", cambia el usuario global de la configuración de git, git config --global user.name "DevRehpotsirhc"
git config --global user.email "[email]", cambia el email global de la configuración de git, git config --global user.email "christopher4ponte@gmail.com"
git remote add origin "[repositorio remoto]", crea una conexión con un repositorio remoto, git remote add origin "https://github.com/DevRehpotsirhc/Portfolio.git"
git clone "[repositorio remoto]", clona el repositorio remoto en local, git clone "https://github.com/DevRehpotsirhc/Portfolio.git"
git status, muestra el estado actual del repositorio incluyendo archivos sin añadir y demás
git add [archivo/s], añade los archivos modificados/nuevos al próximo commit, git add . (El '.' añade todo el directorio actual) / git add views.py
git reset HEAD [archivo/s], quita los archivos especificados para el siguiente commit, git reset HEAD . / git reset HEAD views.py
git commit -m "[descripción]: [mensaje]", aplica los cambios a la branch seleccionada y añade un mensaje sobre los archivos añadidos, git commit -m "fix(login): corregí un problema con el formulario de login sobre la validación de contraseñas"
git commit --amend -m "[descripción]: [mensaje]", modifica el mensaje del commit, git commit --amend -m "fix(login): corregí la validación de contraseñas"
git reset --soft HEAD~1, quita el último commit pero mantiene los cambios
git reset --hard HEAD~1, quita el último commit y elimina los cambios
git revert [id commit], crea un commit sin los cambios hecho por id del commit seleccionado
git log, muestra el historial de commits hechos
git branch, muestra las ramas en el repositorio
git branch -b [prefijo]/[función], crea una rama en el repositorio (-b es opcional y sirve para cambiar a la rama al crearla), git branch -b feature/login-form
git branch -d [rama], elimina una rama, git branch -d fix/responsive
git checkout [rama], cambia de rama, git checkout refactor/navbar
git diff [rama], muestra las diferencia dos ramas (generalmente la rama activa vs la seleccionada), git diff test/gen_infos
git merge [rama], fusiona dos ramas, git merge ejemplo / git diff merge main ejemplo
git push origin main, sube los cambios hecho al repositorio remoto
git push origin main --force, fuerza que el repositorio remoto sea igual al local
git pull origin main, actualiza el repositorio local con los cambios en el repositorio remoto
git stash push -m "[mensaje]", crea un guardado temporal, git stash push -m "trabajo temporal"
git stash list, muestra una lista con los guardados existentes
git stash pop, muestra el guardado temporal
git tag, muestra las versiones etiquetadas de la aplicación
git tag v[major.minor.patch], se usa para dar asignarle una etiqueta de versión a la aplicación con SemVer, git tag v1.0.0
git tag -a v[major.minor.patch] -m "[mensaje]", -a permite añadir metadatos como -m, git tag -a v1.0.0 -m "Primera versión oficial del sistema"
git push origin v[major.minor.patch], sube una versión específica al repositorio remoto, git push origin v1.0.0
git push origin --tags, sube todos los tags al repo remoto
git checkout v[major.minor.patch], cambia la versión, git checkout v1.0.0
git show v[major.minor.patch], muestra los detalles de la versión, git show v1.0.0
git tag -d v[major.minor.patch], elimina una versión almacenada local, git tag -d v1.0.0
git push origin --delete tag v[major.minor.patch], elimina una versión almacenado en el repo remoto, git push origin --delete tag v1.0.0